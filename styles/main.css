@import "general.css";
@import "animations.css";

.container__title {
    grid-area: container__title;
  }
  
  .container {
    position: relative;
  
    display: grid;
    gap: 2% 2%;
    justify-content: center;
    justify-items: center;
    align-items: center;
  
    grid-template-areas:
      "container__title container__title container__title"
      ". island ."
      ". island ."
      ". . .";
  
    height: 80%;
    width: 100%;
  }
  
  .container__grid {
    position: relative;
    grid-area: island;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(7, 1fr);
    grid-column-gap: 3px;
    grid-row-gap: 3px;
  
    height: 75vh;
    width: 75vh;
  
    background-color: var(--bg-color-island-steps);
    border: solid 10px var(--island-border);
    box-shadow: 0 20px 50px 30px var(--island-shadow);
    border-radius: 62% 38% 60% 40% / 56% 66% 34% 44%;
    padding: 14vh;
  
    z-index: 1;
  }
  
  .tile {
    text-align: center;
    text-transform: uppercase;
    cursor: pointer;
  
    border: solid 1px var(--island-border);
    transition: 0.5s;
  
    z-index: 50;
  }
  
  .tile:nth-child(1) {
    background: var(--step-r);
    font-size: 14px;
  }
  
  .tile:nth-child(1),
  .w {
    padding-top: 18px;
  }
  
  .r:hover {
    background: var(--step-r);
  }
  
  .w:hover {
    background: var(--step-w);
  }
  
  .w:hover::before {
    content: "âœ–";
  }
  
  .exit {
    position: relative;
    color: var(--bg-color-island-steps);
  }
  
  .exit:hover {
    background-color: var(--step-r);
  }
  
  /*MODAL*/
  /*Removes the checkbox*/
  input[type="checkbox"],
  #modal {
    display: none;
  }
  
  /*sets the display property to block when the checkbox is checked/clicked*/
  input[type="checkbox"]:checked~.modal,
  input[type="checkbox"]:checked~.rules__modal-background {
    display: block;
  }
  
  /*gives a semi-transparent background and is positioned fixed to cover the entire viewport*/
  .rules__modal-background {
    position: fixed;
    background-color: rgba(0, 0, 0, 0.8);
    display: none;
  
    height: 100%;
    width: 100%;
  
    top: 0;
    left: 0;
  
    z-index: 3;
  }
  
  /*takes up the entire viewport. It has a z-index higher than the modal background to ensure that it appears on top*/
  .modal {
    position: fixed;
    display: none;
    background-color: var(--bg-color-rules);
  
    padding: 80px;
    margin: auto;
    /*shorthand for setting the top, right, bottom, and left properties at once.*/
    inset: 0;
  
    width: 600px;
    height: 600px;
  
    border-radius: 62% 38% 60% 40% / 56% 66% 34% 44%;
  
    z-index: 20;
  }
  
  .modal>p {
    padding: 12px;
    font-size: 17px;
  }
  
  span {
    padding: 2%;
    color: transparent;
    text-shadow: 0 0 0 #128AAC;
  }
  
  .rules__yes {
    background-color: var(--step-r);
  }
  
  .rules__no {
    background-color: var(--step-w);
  }
  
  .close-button {
    background-color: var(--bg-color-island-steps);
    height: fit-content;
  }
  
  /*positions the close button to the right*/
  .close-button label {
    float: right;
    line-height: 50px;
    padding: 0 15px 0 15px;
    cursor: pointer;
    font-weight: bold;
    font-size: 30px;
  }
  
  .close-button label:hover {
    opacity: 0.5;
  }
  
  .rules {
    grid-area: rules;
  }
  
  /* styling for the rules button */
  .rules__button {
    display: inline-block;
    padding: 25px;
  
    background-color: var(--bg-color-rules);
    border-radius: 62% 38% 60% 40% / 56% 66% 34% 44%;
  
    font-size: 15px;
    cursor: pointer;
  }
  
  /* styling when hovering rules button */
  .rules__button:hover {
    opacity: 0.9;
    text-decoration: underline;
  }